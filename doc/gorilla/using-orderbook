;; gorilla-repl.fileformat = 1

;; **
;;; # Gorilla REPL
;;; 
;;; Welcome to gorilla :-)
;;; 
;;; Shift + enter evaluates code. Hit alt+g twice in quick succession or click the menu icon (upper-right corner) for more commands ...
;;; 
;;; It's a good habit to run each worksheet in its own namespace: feel free to use the declaration we've provided below if you'd like.
;; **

;; @@
(ns merciful-desert
  (:require [gorilla-plot.core :as plot]
            [keychain.exchange.gdax :as gdax]
            [clojure.core.async :as a]))
;; @@

;; @@
(def obook (gdax/create-realtime-orderbook ["ETH-USD"]))
;; @@

;; @@
(def book (:book obook))
;; @@

;; @@
((:stop obook))
;; @@

;; @@
(def snap @book)
(def product "ETH-USD")

(clojure.pprint/pprint
{:bid-count (count (gdax/B snap product))
 :ask-count (count (gdax/A snap product))
 :bid (gdax/b snap product)
 :ask (gdax/a snap product)
 :spread (gdax/s snap product)
 :mid (gdax/m snap product)})
;; @@

;; @@
(def profile (gdax/nbpt-profile snap product))
;; @@

;; @@
(clojure.pprint/pprint (sort profile))
;; @@

;; @@
(count (gdax/get-orders snap product identity))
;; @@

;; @@

;; @@
